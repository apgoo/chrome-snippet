function pivot(arr, start=0, end=arr.length-1) {
    function swap(arr,ind1,ind2){
        let temp = arr[ind1];
        arr[ind1] = arr[ind2];
        arr[ind2] = temp;
    }
    let pivot = arr[start]; //4
    let swapIdx = start;  //0+1+2
    for(let i = start+1; i<arr.length;i++) {
        if(pivot > arr[i]) {
            swapIdx++ // 1
            swap(arr,swapIdx,i); //4,1,6
           
        }
    }
    swap(arr,start,swapIdx); // 1,4,6
    return swapIdx;
}
function quickSort(arr,left=0, right= arr.length-1) {
    if(left< right) {
        let pivotInd = pivot(arr, left,right)
        quickSort(arr,left,pivotInd-1);
        quickSort(arr,pivotInd+1, right)
    }
    return arr;
}
quickSort([4,6,1,7,3,8,2])


//l < r  pv = l - r   p   retu   qsLf  retu
//0 < 7       0 - 7   4    3     0-2    1



//under hood on pivot helper workin
//i=s+1; piv>  sw++    s
//    1   4>6    -     
//    2   4>1 =  1    4,1,6,7,3,8,2
//    3   4>7 
//    4   4>3 = 1+1   4,1,3,7,6,8,2 
//    5   4>8 
//    6   4>2   2+1   4,1,3,2,6,8,7

    
//swap = start => swapIdx [2,1,3,4,6,8,7]