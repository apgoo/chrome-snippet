//merging process logic
function merge(arr1,arr2){
    let result = [];
    let i = 0;
    let j = 0;
    while(i < arr1.length && j < arr2.length) {
       if(arr2[j] > arr1[i]) {
           result.push(arr1[i]);
           i++;
       } else {
           result.push(arr2[j]);
           j++;
       }
    }
    while(i< arr1.length) {
        result.push(arr1[i]);
        i++
    }
    while(j< arr2.length) {
        result.push(arr2[j])
        j++;
    }
    return result; 
}

//merge short logic
function mergeShort(arr) {
    if(arr.length <= 1) return arr;
    let middle = Math.floor(arr.length/2);
    let left = mergeShort(arr.slice(0,middle));
    let right = mergeShort(arr.slice(middle));
    return merge(left, right); // call merge FUNCTION
}

mergeShort([100,10,200,5,1,150])


/* MERGE BEHIND THE SCENE
//merge([1,3,5,7],[2,4,6,8,10]);
//merge([],[2,10])

//i = i i<4  && j= j j<5  a2>a1 => res= ,i++;  a2<a1 =>  res = , J++   arr
//0 = 1 0<4  && 0= 2 0<5   2>1 =>   1    0+1;    -         -      -     1
//1 = 3 1<4  && 0= 2 0<5   2>3 =>   -      -;   2<3        2      0+1   2 
//1 = 3 1<4  && 1= 4 1<5   4>3 =>   3    1+1;   --         --      --   3 
//2 = 5 2<4  && 1= 4 1<5   4>5 =>   -      2;   4<5        4      1+1   4
//2 = 5 2<4  && 2= 6 2<5   6>5 =>   5    2+1;   --         -       --   5
//3 = 7 3<4  && 2= 6 2<5   6>7 =>   -      3;   6<7        6      2+1   6
//3 = 7 3<4  && 3= 8 2<5   8>7 =>   7    3+1;   --         -       --   7
//4 =ud 4<4 false(loop end) => return arr[1,2,3,4,5,6,7]; remain in arr2=[8,10](so we added again the two while loop)                                             

*/